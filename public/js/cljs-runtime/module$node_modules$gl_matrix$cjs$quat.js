shadow$provide.module$node_modules$gl_matrix$cjs$quat=function(global,require,module,exports){function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};desc.get||desc.set?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;return newObj}function create(){var out=
new glMatrix.ARRAY_TYPE(4);glMatrix.ARRAY_TYPE!=Float32Array&&(out[0]=0,out[1]=0,out[2]=0);out[3]=1;return out}function setAxisAngle(out,axis,rad){rad*=.5;var s=Math.sin(rad);out[0]=s*axis[0];out[1]=s*axis[1];out[2]=s*axis[2];out[3]=Math.cos(rad);return out}function multiply(out,a,b){var ax=a[0],ay=a[1],az=a[2];a=a[3];var bx=b[0],by=b[1],bz=b[2];b=b[3];out[0]=ax*b+a*bx+ay*bz-az*by;out[1]=ay*b+a*by+az*bx-ax*bz;out[2]=az*b+a*bz+ax*by-ay*bx;out[3]=a*b-ax*bx-ay*by-az*bz;return out}function slerp(out,
a,b,t){var ax=a[0],ay=a[1],az=a[2];a=a[3];var bx=b[0],by=b[1],bz=b[2];b=b[3];var cosom=ax*bx+ay*by+az*bz+a*b;0>cosom&&(cosom=-cosom,bx=-bx,by=-by,bz=-bz,b=-b);if(1-cosom>glMatrix.EPSILON){var omega=Math.acos(cosom);var sinom=Math.sin(omega);cosom=Math.sin((1-t)*omega)/sinom;t=Math.sin(t*omega)/sinom}else cosom=1-t;out[0]=cosom*ax+t*bx;out[1]=cosom*ay+t*by;out[2]=cosom*az+t*bz;out[3]=cosom*a+t*b;return out}function fromMat3(out,m){var fTrace=m[0]+m[4]+m[8];if(0<fTrace)fTrace=Math.sqrt(fTrace+1),out[3]=
.5*fTrace,fTrace=.5/fTrace,out[0]=(m[5]-m[7])*fTrace,out[1]=(m[6]-m[2])*fTrace,out[2]=(m[1]-m[3])*fTrace;else{var i=0;m[4]>m[0]&&(i=1);m[8]>m[3*i+i]&&(i=2);var j=(i+1)%3,k=(i+2)%3;fTrace=Math.sqrt(m[3*i+i]-m[3*j+j]-m[3*k+k]+1);out[i]=.5*fTrace;fTrace=.5/fTrace;out[3]=(m[3*j+k]-m[3*k+j])*fTrace;out[j]=(m[3*j+i]+m[3*i+j])*fTrace;out[k]=(m[3*k+i]+m[3*i+k])*fTrace}return out}Object.defineProperty(exports,"__esModule",{value:!0});exports.create=create;exports.identity=function(out){out[0]=0;out[1]=0;out[2]=
0;out[3]=1;return out};exports.setAxisAngle=setAxisAngle;exports.getAxisAngle=function(out_axis,q){var rad=2*Math.acos(q[3]),s=Math.sin(rad/2);s>glMatrix.EPSILON?(out_axis[0]=q[0]/s,out_axis[1]=q[1]/s,out_axis[2]=q[2]/s):(out_axis[0]=1,out_axis[1]=0,out_axis[2]=0);return rad};exports.multiply=multiply;exports.rotateX=function(out,a,rad){rad*=.5;var ax=a[0],ay=a[1],az=a[2];a=a[3];var bx=Math.sin(rad);rad=Math.cos(rad);out[0]=ax*rad+a*bx;out[1]=ay*rad+az*bx;out[2]=az*rad-ay*bx;out[3]=a*rad-ax*bx;return out};
exports.rotateY=function(out,a,rad){rad*=.5;var ax=a[0],ay=a[1],az=a[2];a=a[3];var by=Math.sin(rad);rad=Math.cos(rad);out[0]=ax*rad-az*by;out[1]=ay*rad+a*by;out[2]=az*rad+ax*by;out[3]=a*rad-ay*by;return out};exports.rotateZ=function(out,a,rad){rad*=.5;var ax=a[0],ay=a[1],az=a[2];a=a[3];var bz=Math.sin(rad);rad=Math.cos(rad);out[0]=ax*rad+ay*bz;out[1]=ay*rad-ax*bz;out[2]=az*rad+a*bz;out[3]=a*rad-az*bz;return out};exports.calculateW=function(out,a){var x=a[0],y=a[1];a=a[2];out[0]=x;out[1]=y;out[2]=
a;out[3]=Math.sqrt(Math.abs(1-x*x-y*y-a*a));return out};exports.slerp=slerp;exports.random=function(out){var u1=glMatrix.RANDOM(),u2=glMatrix.RANDOM(),u3=glMatrix.RANDOM(),sqrt1MinusU1=Math.sqrt(1-u1);u1=Math.sqrt(u1);out[0]=sqrt1MinusU1*Math.sin(2*Math.PI*u2);out[1]=sqrt1MinusU1*Math.cos(2*Math.PI*u2);out[2]=u1*Math.sin(2*Math.PI*u3);out[3]=u1*Math.cos(2*Math.PI*u3);return out};exports.invert=function(out,a){var a0=a[0],a1=a[1],a2=a[2];a=a[3];var dot=a0*a0+a1*a1+a2*a2+a*a;dot=dot?1/dot:0;out[0]=
-a0*dot;out[1]=-a1*dot;out[2]=-a2*dot;out[3]=a*dot;return out};exports.conjugate=function(out,a){out[0]=-a[0];out[1]=-a[1];out[2]=-a[2];out[3]=a[3];return out};exports.fromMat3=fromMat3;exports.fromEuler=function(out,x,y,z){var halfToRad=.5*Math.PI/180;x*=halfToRad;y*=halfToRad;z*=halfToRad;halfToRad=Math.sin(x);x=Math.cos(x);var sy=Math.sin(y);y=Math.cos(y);var sz=Math.sin(z);z=Math.cos(z);out[0]=halfToRad*y*z-x*sy*sz;out[1]=x*sy*z+halfToRad*y*sz;out[2]=x*y*sz-halfToRad*sy*z;out[3]=x*y*z+halfToRad*
sy*sz;return out};exports.str=function(a){return"quat("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"};exports.setAxes=exports.sqlerp=exports.rotationTo=exports.equals=exports.exactEquals=exports.normalize=exports.sqrLen=exports.squaredLength=exports.len=exports.length=exports.lerp=exports.dot=exports.scale=exports.mul=exports.add=exports.set=exports.copy=exports.fromValues=exports.clone=void 0;var glMatrix=_interopRequireWildcard(require("module$node_modules$gl_matrix$cjs$common")),mat3=_interopRequireWildcard(require("module$node_modules$gl_matrix$cjs$mat3")),
vec3=_interopRequireWildcard(require("module$node_modules$gl_matrix$cjs$vec3"));global=_interopRequireWildcard(require("module$node_modules$gl_matrix$cjs$vec4"));exports.clone=global.clone;exports.fromValues=global.fromValues;exports.copy=global.copy;exports.set=global.set;exports.add=global.add;exports.mul=multiply;exports.scale=global.scale;exports.dot=global.dot;exports.lerp=global.lerp;require=global.length;exports.length=require;exports.len=require;require=global.squaredLength;exports.squaredLength=
require;exports.sqrLen=require;var normalize=global.normalize;exports.normalize=normalize;exports.exactEquals=global.exactEquals;exports.equals=global.equals;global=function(){var tmpvec3=vec3.create(),xUnitVec3=vec3.fromValues(1,0,0),yUnitVec3=vec3.fromValues(0,1,0);return function(out,a,b){var dot=vec3.dot(a,b);if(-.999999>dot)return vec3.cross(tmpvec3,xUnitVec3,a),1E-6>vec3.len(tmpvec3)&&vec3.cross(tmpvec3,yUnitVec3,a),vec3.normalize(tmpvec3,tmpvec3),setAxisAngle(out,tmpvec3,Math.PI),out;if(.999999<
dot)return out[0]=0,out[1]=0,out[2]=0,out[3]=1,out;vec3.cross(tmpvec3,a,b);out[0]=tmpvec3[0];out[1]=tmpvec3[1];out[2]=tmpvec3[2];out[3]=1+dot;return normalize(out,out)}}();exports.rotationTo=global;global=function(){var temp1=create(),temp2=create();return function(out,a,b,c,d,t){slerp(temp1,a,d,t);slerp(temp2,b,c,t);slerp(out,temp1,temp2,2*t*(1-t));return out}}();exports.sqlerp=global;global=function(){var matr=mat3.create();return function(out,view,right,up){matr[0]=right[0];matr[3]=right[1];matr[6]=
right[2];matr[1]=up[0];matr[4]=up[1];matr[7]=up[2];matr[2]=-view[0];matr[5]=-view[1];matr[8]=-view[2];return normalize(out,fromMat3(out,matr))}}();exports.setAxes=global}
//# sourceMappingURL=module$node_modules$gl_matrix$cjs$quat.js.map
