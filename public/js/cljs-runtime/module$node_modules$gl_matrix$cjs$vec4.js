shadow$provide.module$node_modules$gl_matrix$cjs$vec4=function(global,require,module,exports){function create(){var out=new glMatrix.ARRAY_TYPE(4);glMatrix.ARRAY_TYPE!=Float32Array&&(out[0]=0,out[1]=0,out[2]=0,out[3]=0);return out}function subtract(out,a,b){out[0]=a[0]-b[0];out[1]=a[1]-b[1];out[2]=a[2]-b[2];out[3]=a[3]-b[3];return out}function multiply(out,a,b){out[0]=a[0]*b[0];out[1]=a[1]*b[1];out[2]=a[2]*b[2];out[3]=a[3]*b[3];return out}function divide(out,a,b){out[0]=a[0]/b[0];out[1]=a[1]/b[1];
out[2]=a[2]/b[2];out[3]=a[3]/b[3];return out}function distance(a,b){var x=b[0]-a[0],y=b[1]-a[1],z=b[2]-a[2];a=b[3]-a[3];return Math.sqrt(x*x+y*y+z*z+a*a)}function squaredDistance(a,b){var x=b[0]-a[0],y=b[1]-a[1],z=b[2]-a[2];a=b[3]-a[3];return x*x+y*y+z*z+a*a}function length(a){var x=a[0],y=a[1],z=a[2];a=a[3];return Math.sqrt(x*x+y*y+z*z+a*a)}function squaredLength(a){var x=a[0],y=a[1],z=a[2];a=a[3];return x*x+y*y+z*z+a*a}Object.defineProperty(exports,"__esModule",{value:!0});exports.create=create;
exports.clone=function(a){var out=new glMatrix.ARRAY_TYPE(4);out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];return out};exports.fromValues=function(x,y,z,w){var out=new glMatrix.ARRAY_TYPE(4);out[0]=x;out[1]=y;out[2]=z;out[3]=w;return out};exports.copy=function(out,a){out[0]=a[0];out[1]=a[1];out[2]=a[2];out[3]=a[3];return out};exports.set=function(out,x,y,z,w){out[0]=x;out[1]=y;out[2]=z;out[3]=w;return out};exports.add=function(out,a,b){out[0]=a[0]+b[0];out[1]=a[1]+b[1];out[2]=a[2]+b[2];out[3]=a[3]+
b[3];return out};exports.subtract=subtract;exports.multiply=multiply;exports.divide=divide;exports.ceil=function(out,a){out[0]=Math.ceil(a[0]);out[1]=Math.ceil(a[1]);out[2]=Math.ceil(a[2]);out[3]=Math.ceil(a[3]);return out};exports.floor=function(out,a){out[0]=Math.floor(a[0]);out[1]=Math.floor(a[1]);out[2]=Math.floor(a[2]);out[3]=Math.floor(a[3]);return out};exports.min=function(out,a,b){out[0]=Math.min(a[0],b[0]);out[1]=Math.min(a[1],b[1]);out[2]=Math.min(a[2],b[2]);out[3]=Math.min(a[3],b[3]);return out};
exports.max=function(out,a,b){out[0]=Math.max(a[0],b[0]);out[1]=Math.max(a[1],b[1]);out[2]=Math.max(a[2],b[2]);out[3]=Math.max(a[3],b[3]);return out};exports.round=function(out,a){out[0]=Math.round(a[0]);out[1]=Math.round(a[1]);out[2]=Math.round(a[2]);out[3]=Math.round(a[3]);return out};exports.scale=function(out,a,b){out[0]=a[0]*b;out[1]=a[1]*b;out[2]=a[2]*b;out[3]=a[3]*b;return out};exports.scaleAndAdd=function(out,a,b,scale){out[0]=a[0]+b[0]*scale;out[1]=a[1]+b[1]*scale;out[2]=a[2]+b[2]*scale;
out[3]=a[3]+b[3]*scale;return out};exports.distance=distance;exports.squaredDistance=squaredDistance;exports.length=length;exports.squaredLength=squaredLength;exports.negate=function(out,a){out[0]=-a[0];out[1]=-a[1];out[2]=-a[2];out[3]=-a[3];return out};exports.inverse=function(out,a){out[0]=1/a[0];out[1]=1/a[1];out[2]=1/a[2];out[3]=1/a[3];return out};exports.normalize=function(out,a){var x=a[0],y=a[1],z=a[2];a=a[3];var len=x*x+y*y+z*z+a*a;0<len&&(len=1/Math.sqrt(len));out[0]=x*len;out[1]=y*len;out[2]=
z*len;out[3]=a*len;return out};exports.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3]};exports.cross=function(out,u,v,w){var A=v[0]*w[1]-v[1]*w[0],B=v[0]*w[2]-v[2]*w[0],C=v[0]*w[3]-v[3]*w[0],D=v[1]*w[2]-v[2]*w[1],E=v[1]*w[3]-v[3]*w[1];v=v[2]*w[3]-v[3]*w[2];w=u[0];var H=u[1],I=u[2];u=u[3];out[0]=H*v-I*E+u*D;out[1]=-(w*v)+I*C-u*B;out[2]=w*E-H*C+u*A;out[3]=-(w*D)+H*B-I*A;return out};exports.lerp=function(out,a,b,t){var ax=a[0],ay=a[1],az=a[2];a=a[3];out[0]=ax+t*(b[0]-ax);out[1]=ay+
t*(b[1]-ay);out[2]=az+t*(b[2]-az);out[3]=a+t*(b[3]-a);return out};exports.random=function(out,scale){scale=scale||1;do{var v1=2*glMatrix.RANDOM()-1;var v2=2*glMatrix.RANDOM()-1;var s1=v1*v1+v2*v2}while(1<=s1);do{var v3=2*glMatrix.RANDOM()-1;var v4=2*glMatrix.RANDOM()-1;var s2=v3*v3+v4*v4}while(1<=s2);s1=Math.sqrt((1-s1)/s2);out[0]=scale*v1;out[1]=scale*v2;out[2]=scale*v3*s1;out[3]=scale*v4*s1;return out};exports.transformMat4=function(out,a,m){var x=a[0],y=a[1],z=a[2];a=a[3];out[0]=m[0]*x+m[4]*y+
m[8]*z+m[12]*a;out[1]=m[1]*x+m[5]*y+m[9]*z+m[13]*a;out[2]=m[2]*x+m[6]*y+m[10]*z+m[14]*a;out[3]=m[3]*x+m[7]*y+m[11]*z+m[15]*a;return out};exports.transformQuat=function(out,a,q){var x=a[0],y=a[1],z=a[2],qx=q[0],qy=q[1],qz=q[2];q=q[3];var ix=q*x+qy*z-qz*y,iy=q*y+qz*x-qx*z,iz=q*z+qx*y-qy*x;x=-qx*x-qy*y-qz*z;out[0]=ix*q+x*-qx+iy*-qz-iz*-qy;out[1]=iy*q+x*-qy+iz*-qx-ix*-qz;out[2]=iz*q+x*-qz+ix*-qy-iy*-qx;out[3]=a[3];return out};exports.zero=function(out){out[0]=0;out[1]=0;out[2]=0;out[3]=0;return out};
exports.str=function(a){return"vec4("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"};exports.exactEquals=function(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]};exports.equals=function(a,b){var a0=a[0],a1=a[1],a2=a[2];a=a[3];var b0=b[0],b1=b[1],b2=b[2];b=b[3];return Math.abs(a0-b0)<=glMatrix.EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=glMatrix.EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=glMatrix.EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a-
b)<=glMatrix.EPSILON*Math.max(1,Math.abs(a),Math.abs(b))};exports.forEach=exports.sqrLen=exports.len=exports.sqrDist=exports.dist=exports.div=exports.mul=exports.sub=void 0;var glMatrix=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};desc.get||desc.set?Object.defineProperty(newObj,key,desc):newObj[key]=
obj[key]}newObj.default=obj;return newObj}(require("module$node_modules$gl_matrix$cjs$common"));exports.sub=subtract;exports.mul=multiply;exports.div=divide;exports.dist=distance;exports.sqrDist=squaredDistance;exports.len=length;exports.sqrLen=squaredLength;global=function(){var vec=create();return function(a,stride,offset,count,fn,arg){stride||(stride=4);offset||(offset=0);for(count=count?Math.min(count*stride+offset,a.length):a.length;offset<count;offset+=stride)vec[0]=a[offset],vec[1]=a[offset+
1],vec[2]=a[offset+2],vec[3]=a[offset+3],fn(vec,vec,arg),a[offset]=vec[0],a[offset+1]=vec[1],a[offset+2]=vec[2],a[offset+3]=vec[3];return a}}();exports.forEach=global}
//# sourceMappingURL=module$node_modules$gl_matrix$cjs$vec4.js.map
