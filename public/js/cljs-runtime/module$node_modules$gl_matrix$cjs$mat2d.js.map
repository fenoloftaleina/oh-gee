{
"version":3,
"file":"module$node_modules$gl_matrix$cjs$mat2d.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/gl-matrix/cjs/mat2d.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$gl_matrix$cjs$mat2d\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;\n};"],
"names":["shadow$provide","global","require","module","exports","multiply","out","a","b","a0","a1","a2","a3","a4","a5","b0","b1","b2","b3","b4","b5","subtract","Object","defineProperty","value","create","glMatrix","ARRAY_TYPE","Float32Array","clone","copy","identity","fromValues","c","d","tx","ty","set","invert","aa","ab","ac","ad","atx","aty","det","determinant","rotate","rad","s","Math","sin","cos","scale","v","v0","v1","translate","fromRotation","fromScaling","fromTranslation","str","frob","sqrt","pow","add","multiplyScalar","multiplyScalarAndAdd","exactEquals","equals","abs","EPSILON","max","sub","mul","_interopRequireWildcard","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","default"]
}
