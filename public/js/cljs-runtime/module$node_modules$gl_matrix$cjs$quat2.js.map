{
"version":3,
"file":"module$node_modules$gl_matrix$cjs$quat2.js",
"lineCount":20,
"mappings":"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",
"sources":["node_modules/gl-matrix/cjs/quat2.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$gl_matrix$cjs$quat2\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.fromRotationTranslationValues = fromRotationTranslationValues;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromMat4 = fromMat4;\nexports.copy = copy;\nexports.identity = identity;\nexports.set = set;\nexports.getDual = getDual;\nexports.setDual = setDual;\nexports.getTranslation = getTranslation;\nexports.translate = translate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotateByQuatAppend = rotateByQuatAppend;\nexports.rotateByQuatPrepend = rotateByQuatPrepend;\nexports.rotateAroundAxis = rotateAroundAxis;\nexports.add = add;\nexports.multiply = multiply;\nexports.scale = scale;\nexports.lerp = lerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.normalize = normalize;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.dot = exports.mul = exports.setReal = exports.getReal = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\nfunction create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\n\nvar getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexports.getReal = getReal;\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nvar setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.setReal = setReal;\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.mul = mul;\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\n\nvar dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexports.dot = dot;\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\n\nvar length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\n\nfunction str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","default","fromRotationTranslation","out","q","t","ax","ay","az","bx","by","bz","bw","copy","a","multiply","b","ax0","ay0","az0","aw0","bx1","by1","bz1","bw1","ax1","ay1","az1","aw1","bx0","by0","bz0","bw0","value","create","dq","glMatrix","ARRAY_TYPE","Float32Array","clone","fromValues","x1","y1","z1","w1","x2","y2","z2","w2","fromRotationTranslationValues","fromTranslation","fromRotation","fromMat4","outer","quat","mat4","getRotation","getTranslation","identity","getDual","setDual","aw","translate","v","ax2","ay2","az2","aw2","rotateX","rad","rotateY","rotateZ","rotateByQuatAppend","qx","qy","qz","qw","rotateByQuatPrepend","rotateAroundAxis","axis","Math","abs","EPSILON","axisLength","sqrt","s","sin","cos","add","scale","lerp","mt","dot","invert","sqlen","squaredLength","conjugate","normalize","magnitude","a0","a1","a2","a3","b0","b1","b2","b3","a_dot_b","str","exactEquals","equals","a4","a5","a6","a7","b4","b5","b6","b7","max","sqrLen","len","length","mul","setReal","getReal"]
}
