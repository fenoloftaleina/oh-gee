{
"version":3,
"file":"module$node_modules$gl_matrix$cjs$vec4.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/gl-matrix/cjs/vec4.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$gl_matrix$cjs$vec4\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;\n};"],
"names":["shadow$provide","global","require","module","exports","create","out","glMatrix","ARRAY_TYPE","Float32Array","subtract","a","b","multiply","divide","distance","x","y","z","w","Math","sqrt","squaredDistance","length","squaredLength","Object","defineProperty","value","clone","fromValues","copy","set","add","ceil","floor","min","max","round","scale","scaleAndAdd","negate","inverse","normalize","len","dot","cross","u","v","A","B","C","D","E","F","G","H","I","J","lerp","t","ax","ay","az","aw","random","v1","RANDOM","v2","s1","v3","v4","s2","d","transformMat4","m","transformQuat","q","qx","qy","qz","qw","ix","iy","iz","iw","zero","str","exactEquals","equals","a0","a1","a2","a3","b0","b1","b2","b3","abs","EPSILON","forEach","sqrLen","sqrDist","dist","div","mul","sub","_interopRequireWildcard","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","default","vec","stride","offset","count","fn","arg","l","i"]
}
